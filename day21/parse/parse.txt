

download the antlr4 jar file
https://www.antlr.org/download/antlr-4.13.1-complete.jar

move it to /usr/local/lib directory

> edit ~/.bashrc or ~/.bash_profile
# setup java to find the antlr jar file just downloaded
# do not forget . at start of CLASSPATH
export CLASSPATH=".:/usr/local/lib/antrl-4.13.1-complete.jar:$CLASSPATH"

alias antlr4='java -jar /usr/local/lib/antlr-4.13.1-complete.jar'

alias grun="java org.antlr.v4.gui.TestRig"

> create grammar g4 file
    Hello.g4
----------------------------------------------------------------------------------
grammar Hello;			// Define a grammer called Hello
r : 'hello' ID;			// match keyword hello followed by an identifier
ID : [a-z]+ ;			// match lower case identifiers
WS : [ \t\r\n]+ -> skip ; 	// skip whitespac tabs newlines returns
----------------------------------------------------------------------------------

> antlr4 Hello.g4

> javac *.java

> grun Hello r -tokens
hello parrt
Ctrl-d

# this is really special ... it outputs a lisp expression tree !

> grun Hello r -tree
hello parrt
Ctrl-d

=> (r hello parrt)



grammar 
------------------------------------------

test-001
    "swap position X with position Y"
    means that the letters at indexes X and Y (counting from 0) should be swapped.

test-002
    "swap letter X with letter Y"
    means that the letters X and Y should be swapped (regardless of where they appear in the string).

test-003
    "rotate left X steps"

test-004
    "rotate right X steps"

means that the whole string should be rotated; for example, one right rotation would turn abcd into dabc.

test-005
    "rotate based on position of letter X"
   

means that the whole string should be rotated to the right based on the index of letter X (counting from 0) as determined before this instruction does any rotations. Once the index is determined, rotate the string to the right one time, plus a number of times equal to that index, plus one additional time if the index was at least 4.

    "reverse positions X through Y"

means that the span of letters at indexes X through Y (including the letters at X and Y) should be reversed in order.

    "move position X to position Y"

means that the letter which is at index X should be removed from the string, then inserted such that it ends up at index Y.

---------------------------------------------


